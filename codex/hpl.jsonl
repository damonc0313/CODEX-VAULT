{"antecedents": ["BOOTRUN-S4"], "confidence": 0.65, "conflicts": [], "id": "H-001", "origin": "S6-BOOTRUN", "principle": "Document pytest-cov as optional dependency and fall back to coverage-free pytest when absent.", "status": "ACTIVE"}
{"antecedents": ["TASK010-S1", "GC-002-A"], "confidence": 0.6, "conflicts": [], "id": "H-002", "origin": "S6-TASK010", "principle": "Scope feature stubs around constraint ladders before attempting automation changes.", "status": "ACTIVE"}
{"antecedents": ["H-001", "legacy-coverage-rule"], "confidence": 0.58, "conflicts": ["legacy-coverage-rule"], "id": "H-003", "origin": "GC-003-A", "principle": "When heuristics disagree on coverage strictness, synthesize a blended policy specifying optional installs with CLA logging.", "status": "SYNTHESIZED"}
{"antecedents": ["GC-007"], "confidence": 0.62, "conflicts": [], "id": "H-004", "origin": "GC-007", "principle": "Validate ontology relations after each catalyst run to prevent EXECUTES/ENABLES drift.", "status": "ACTIVE"}
{"antecedents": ["BOOTRUN-R2-S4"], "confidence": 0.7, "conflicts": [], "id": "H-005", "origin": "S6-BOOTRUN-R2", "principle": "Install coverage and graph dependencies via requirements.txt before executing pytest cycles.", "status": "ACTIVE"}
{"antecedents": ["H-001", "H-005"], "confidence": 0.66, "conflicts": ["H-001"], "id": "H-006", "origin": "GC-003-B", "principle": "Promote dependency enforcement from optional to required once CLA shows measurable reliability gains.", "status": "ACTIVE"}
